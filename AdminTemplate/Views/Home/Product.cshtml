@{
    ViewBag.Title = "Ürün Sayfası";
}
<div class="row">
    <div class="col-md-6" id="cardListProduct">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <h3 class="card-title">Ürün Listesi </h3>
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" role="switch" id="switch">
                    <label class="form-check-label" for="switch">Ürün Ekle</label>
                </div>
            </div>
            <div class="card-body">
                <ul id="listProduct" class="list-group d-flex justify-content-between">
                    <li class="list-group-item">Ürün Adı - Fiyatı - Kategorisi</li>
                </ul>
            </div>
        </div>
    </div>
    <div class="col-md-6" id="cardAddProduct" style="display: none">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Ürün Ekle</h3>
            </div>
            <div class="card-body">
                <form id="formProduct">
                    <div class="mb-3 row">
                        <label for="cmbCategory" class="col-sm-3 col-form-label">Kategori</label>
                        <div class="col-sm-10">
                            <select id="cmbCategory" class="custom-select">
                                <option>Bir kategori seçiniz</option>
                            </select>
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label for="txtProductName" class="col-sm-3 col-form-label">Ürün Adı</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="txtProductName">
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label for="txtUnitPrice" class="col-sm-3 col-form-label">Fiyatı</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="txtUnitPrice">
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <input type="submit" value="Kaydet" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>
    </div>
        <div class="col-md-6" id="cardUpdateProduct" style="display: none">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Ürün Güncelle</h3>
            </div>
            <div class="card-body">
                <form id="formUpdateProduct">
                    <div class="mb-3 row">
                        <label for="txtUpdateProductName" class="col-sm-3 col-form-label">Ürün Adı</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="txtUpdateProductName">
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label for="txtUpdateUnitPrice" class="col-sm-3 col-form-label">Fiyat</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="txtUpdateUnitPrice">
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <input type="submit" value="Güncelle" class="btn btn-primary" />
                    </div>
                    <input type="hidden" id="txtUpdateProductId" />
                </form>
            </div>
        </div>
    </div
</div>

@section Scripts {
<script>
    $(()=>{
        getProducts();
        $("#switch").on("change", ()=>{
            console.log("değişti")
            if ($("#switch").is(":checked")) {
                getCategoryLookup();
                $("#cardListProduct").attr("class", "col-md-6");
                $("#formProduct").trigger("reset");
                $("#cardAddProduct").slideDown(750);
            }
            else{
                $("#cardAddProduct").slideUp(750, ()=> {
                    $("#cardListProduct").attr("class", "col-md-12");
                });
            }

        });
        $("#formProduct").on("submit", (e)=>{
            e.preventDefault();
            var data = {
                categoryId: $("#cmbCategory").val(),
                name: $("#txtProductName").val(),
                unitPrice: $("#txtUnitPrice").val()
            };
            $.ajax({
                url:"../../api/productapi/add",
                method: "POST",
                data: JSON.stringify(data),
                headers: {
                    "Content-Type": "application/json"
                }
            }).done(data => {
                //alert(data.message);
                toastr["success"]("Ürün Ekleme", data.message);
                $("#formProduct").trigger("reset");
                GetProducts();
                $("#txtProductName").focus();
            }).fail(response => {
                toastr["error"]("Ürün Ekleme", response.responseJSON.message);
            });
        });
        $("#formUpdateProduct").submit(e => {
            e.preventDefault();
            var data = {
                name: $("#txtUpdateProductName").val(),
                description: $("#txtUpdateUnitPrice").val(),
                id: $("#txtUpdateProductId").val()
            };

            $.ajax({
                url: "../../api/productapi/update/" + data.id,
                method: "PUT",
                data: JSON.stringify(data),
                headers: {
                    "Content-Type": "application/json"
                }
            }).done(data => {
                toastr["success"]("Ürün Ekleme", data.message);
                GetProduct();
                $("#cardUpdateProduct").slideUp(750);
                $("#formUpdateProduct").trigger("reset");
                $("#cardListProduct").attr("class", "col-md-12");
            }).fail(error => {
                toastr["error"]("Ürün Ekleme", error.responseJSON.message);
            });
        });
    });

    const getProducts = () => {
        var settings = {
            url:"../../api/productapi/all",
            method: "GET"
        };
        $.ajax(settings).done(function(response) {
            //console.log(response);
            addProductList(response);
        });
    };

    const getCategoryLookup = () => {
        $.ajax({
              url: "../../api/categoryapi/all",
              method: "GET"
        }).done(data => {
            console.log(data);
            addCategoryLookup(data);
        }).fail(error =>{
            console.log(error);
        });
    };

    const addCategoryLookup = (categories) => {
        $("#cmbCategory").empty();
        categories.forEach(category => {
            $("#cmbCategory").append(`<option value="${category.id}">${category.name}</option>`);
        });
    };

    const addProductList = (products) => {
    $("#listProduct").empty();
    products.forEach(product => {
            var listProduct = $("#listProduct")
            const div = $("<div>");
            div.css("float", "right");
            const li = $("<li>").text(`${product.name} - ${product.unitPrice} - ${product.category.name}`);
            li.addClass("list-group-item");
            const btnUpdate = $(`<input type='button' value='Güncelle' class='btn btn-primary' data-id='${product.id}' />`);

            btnUpdate.on("click",
                () => {
                    const id = $(btnUpdate).attr("data-id");
                    //apiden kategori detayını çek
                    //api/categoryapi/detail/${id}
                    $.ajax({
                        url: `../../api/productapi/detail/${id}`,
                        method: "GET"
                    }).done((response) => {
                        console.log(response);
                        $("#txtUpdateProductName").val(response.name);
                        $("#txtUpdateUnitPrice").val(response.unitPrice);
                        $("#txtUpdateCategoryId").val(response.id);
                        $("#cardUpdateProduct").slideDown(750);
                        $("#cardListProduct").attr("class", "col-md-6");

                    }).fail((error) => {
                        console.log(error.responseJSON.message);
                    });
                });

            const btnDelete = $(`<input type='button' value='Sil' class='btn btn-danger' data-id='${product.id}' />`);

            btnDelete.on("click",
                () => {
                    const id = $(btnDelete).attr("data-id");
                    Swal.fire({
                        icon: 'question',
                        title: `${product.name} isimli ürün silinsin mi?`,
                        showCancelButton: true,
                        confirmButtonText: 'Sil',
                        cancelButtonText: `İptal`,
                    }).then((result) => {
                        /* Read more about isConfirmed, isDenied below */
                        //console.log(result);
                        if (result.isConfirmed) {
                            //ajax silme işlemi yapılacak

                            $.ajax({
                                url: `../../api/productapi/delete/${id}`,
                                method: "DELETE"
                            }).done(data => {
                                console.log(data);
                                toastr["success"]("Silindi", data.message);
                                GetProducts();
                            }).fail(data => {
                                console.log(data);
                            });
                            //Swal.fire('Kopyalandı!', pickerDiv.innerHTML, 'success')
                        } else {
                            Swal.fire('İptal', 'Silme işlemi iptal edildi', 'info');
                        }
                    });
                });

            div.append(btnUpdate).append(btnDelete).appendTo(li);
            listProduct.append(li);
        
        });
    };







    toastr.options = {
        "closeButton": false,
        "debug": false,
        "newestOnTop": false,
        "progressBar": false,
        "positionClass": "toast-top-right",
        "preventDuplicates": false,
        "onclick": null,
        "showDuration": "300",
        "hideDuration": "1000",
        "timeOut": "5000",
        "extendedTimeOut": "1000",
        "showEasing": "swing",
        "hideEasing": "linear",
        "showMethod": "fadeIn",
        "hideMethod": "fadeOut"
    }
</script>
}